<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="springBootMVCShopping.mapper.GoodsStockMapper">
    <resultMap type="goodsStockDTO" id="goodsStockResultMap">
        <result column="stock" jdbcType="INTEGER" property="stock" javaType="Integer"/>
        <association property="goodsDTO" javaType="goodsDTO">
            <id column="goods_num" jdbcType="VARCHAR" property="goodsNum"/>
            <result column="goods_price" jdbcType="BIGINT" property="goodsPrice"/>
            <result column="goods_contents" jdbcType="VARCHAR" property="goodsContents"/>
            <result column="visit_count" jdbcType="BIGINT" property="visitCount"/>
            <result column="goods_main_image" jdbcType="VARCHAR" property="goodsMainImage"/>
            <result column="goods_update_date" jdbcType="DATE" property="goodsUpdateDate"/>
            <result column="goods_detail_image" jdbcType="VARCHAR" property="goodsDetailImage"/>
            <result column="goods_detail_store_image" jdbcType="VARCHAR" property="goodsDetailStoreImage"/>
            <result column="emp_num" jdbcType="VARCHAR" property="empNum"/>
            <result column="goods_regist" jdbcType="DATE" property="goodsRegist"/>
            <result column="update_emp_num" jdbcType="VARCHAR" property="updateEmpNum"/>
            <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
            <result column="goods_main_store_image" jdbcType="VARCHAR" property="goodsMainStoreImage"/>
        </association>
    </resultMap>
    
    <select id="goodsStockSelectOne" parameterType="string" resultMap="goodsStockResultMap">
    select g.GOODS_NUM, GOODS_PRICE, GOODS_CONTENTS, VISIT_COUNT, GOODS_MAIN_IMAGE, 
		   GOODS_UPDATE_DATE, GOODS_DETAIL_IMAGE, GOODS_DETAIL_STORE_IMAGE, EMP_NUM, GOODS_REGIST, 
		   UPDATE_EMP_NUM, GOODS_NAME, GOODS_MAIN_STORE_IMAGE, nvl(stock, 0)
    from goods g left outer join
		(SELECT ip.goods_num, ipqty - nvl(pqty, 0) as stock
			FROM (select goods_num, sum(IPGO_QTY) as ipqty
				  from goods_ipgo group by goods_num ) ip
			LEFT OUTER JOIN (
				select goods_num, sum(PURCHASE_QTY) pqty from purchase_list
				group by goods_num) pl
			on ip.goods_num = pl.goods_num) s
		on g.goods_num = s.goods_num
	where g.goods_num = #{goodsNum}
    </select>
    
</mapper>
