<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="purchaseRepositorySql">
	<sql id="purchaseBaseColumns">
	purchase_num, purchase_name, purchase_date, purchase_price, member_num, delivery_addr_detail, 
	delivery_post, delivery_phone, message, purchase_status, delivery_name, delivery_addr
	</sql>

	<select id="purchaseNum" resultType = "string">
		select concat(to_char(sysdate, 'yyyyMMdd'), nvl(max(to_number(substr(purchase_num, 9))), 0) + 1)
		from purchase
		where substr(purchase_num, 1, 8) = to_char(sysdate, 'yyyyMMdd')
	</select>
	
	<insert id="purchaseInsert" parameterType="purchaseDTO">
		insert into purchase(<include refid="purchaseBaseColumns"></include>)
		values(#{purchaseNum}, #{purchaseName}, sysdate, #{purchasePrice},
			   #{memberNum}, #{deliveryAddrDetail}, #{deliveryPost}, #{deliveryPhone}, 
			   #{message}, '결제 대기중', #{deliveryName}, #{deliveryAddr}
		)
	</insert>
	
	
	<insert id = "purchaseListInsert" parameterType = "hashmap">
		insert into purchase_list(GOODS_NUM, PURCHASE_NUM, PURCHASE_QTY, GOODS_UNIT_PRICE)
		(select c.GOODS_NUM, #{purchaseNum}, CART_QTY, GOODS_PRICE from
		cart c join goods g
		on c.goods_num = g.goods_num 
		where member_num = #{memberNum} and c.goods_num in
		<foreach collection="goodsNums" open="(" close=")" index="index" item="goodsNum" separator=",">
			#{goodsNum}
		</foreach>)
	</insert>
	
	<resultMap type="orderListDTO" id="orderListResultMap">
		<association property="deliveryDTO">
			<id column = "purchase_num" jdbcType = "VARCHAR" property = "purchaseNum" />
			<result column="delivery_num" property="deliveryNum" jdbcType="VARCHAR"/>
			<result column="delivery_date" property="deliveryDate" jdbcType="DATE"/>
			<result column="delivery_status" property="deliveryStatus" jdbcType="VARCHAR"/>
		</association>
	
		<association property="paymentDTO" javaType = "paymentDTO">
			<id column = "purchase_num" jdbcType = "VARCHAR" property = "purchaseNum" />
			<result property="confirmnumber" column="confirmnumber" jdbcType="VARCHAR" />
			<result property="cardnum" column="cardnum" jdbcType = "VARCHAR" />
			<result property="appldate" column="appldate" jdbcType="VARCHAR" />
			<result property="apptime" column="apptime" jdbcType="VARCHAR" />
			<result property="totalprice" column = "totalprice" jdbcType = "BIGINT"/>
		</association>
	<association property="purchaseDTO" javaType = "purchaseDTO">
	    <constructor>
	        <idArg column="PURCHASE_NUM" javaType="String"/>
	        <arg column="PURCHASE_DATE" javaType="java.util.Date"/>
	        <arg column="PURCHASE_PRICE" javaType="Integer"/>
	        <arg column="DELIVERY_ADDR" javaType="String"/>
	        <arg column="DELIVERY_ADDR_DETAIL" javaType="String"/>
	        <arg column="DELIVERY_POST" javaType="String"/>
	        <arg column="DELIVERY_PHONE" javaType="String"/>
	        <arg column="MESSAGE" javaType="String"/>
	        <arg column="PURCHASE_STATUS" javaType="String"/>
	        <arg column="MEMBER_NUM" javaType="String"/>
	        <arg column="DELIVERY_NAME" javaType="String"/>
	        <arg column="PURCHASE_NAME" javaType="String"/>
	    </constructor>
	</association>
	
	
	<collection property="purchaseListGoodsDTOs" ofType="purchaseListGoodsDTO">
		<association property="purchaseListDTO" javaType = "purchaseListDTO">
			<result column="purchase_qty" jdbcType="BIGINT" property="purchaseQty" />
			<result column="GOODS_UNIT_PRICE" jdbcType = "BIGINT" property = "goodsUnitPrice" />
		</association>
		
		<association property="goodsDTO" javaType = "goodsDTO">
			<result column = "goods_num" jdbcType = "VARCHAR" property = "goodsNum"/>
			<result column="goods_name" jdbcType = "VARCHAR" property = "goodsName"/>
			<result column="GOODS_MAIN_STORE_IMAGE" jdbcType = "VARCHAR" property = "goodsMainStoreImage"/>
			<result column="goods_contents" jdbcType = "VARCHAR" property = "goodsContents"/>
		</association>
	</collection>	
</resultMap>
	
<select id="orderList" parameterType="hashmap" resultMap = "orderListResultMap">
	select g.goods_num, goods_name, GOODS_MAIN_STORE_IMAGE, goods_contents,
	    goods_unit_price, purchase_qty,
	    p.purchase_num, PURCHASE_DATE, purchase_price, delivery_addr, delivery_addr_detail, 
	    delivery_post, delivery_phone, message, purchase_status, purchase_price, member_num,
	    delivery_name, purchase_name,
	    CONFIRMNUMBER, CARDNUM, APPLDATE, APPTIME, PAYMETHOD, totalprice,
	    delivery_num, delivery_date, delivery_status
	from goods g join purchase_list pl
	on g.goods_num = pl.goods_num join purchase p
	on pl.purchase_num = p.purchase_num
	left outer join payment pm on pm.purchase_num = p.purchase_num
	left outer join delivery d on p.purchase_num = d.purchase_num
	<trim prefix="where" prefixOverrides="AND | OR">
		<if test="memberNum != null">
				member_num = #{memberNum}
		</if>
		<if test = "purchaseNum != null">
			and p.purchase_num = #{purchaseNum}
		</if>
	</trim>
</select>

<select id="purchaseSelectOne" parameterType="String" resultType = "purchaseDTO">
	select <include refid="purchaseBaseColumns"></include>
	from purchase
	where purchase_num = #{purchaseNum}
</select>

<update id="paymentInsert" parameterType="paymentDTO">
	insert into payment(purchase_num, confirmnumber, cardnum, tid, totalprice, resultmessage, 
						paymethod, appldate, apptime)
				values(#{purchaseNum}, #{confirmnumber}, #{cardnum}, #{tid}, #{totalprice}, #{resultmessage},
						#{paymethod}, #{appldate}, #{apptime})
</update>

<delete id="paymentDel" parameterType="string">
	delete from payment where purchase_num = ${purchaseNum}
</delete>
</mapper>